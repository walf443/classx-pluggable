
= classx-pluggable

plgger's like plugin system for classx based applicaton

== Synopsis

in your context class.

  require 'classx'
  require 'classx/pluggable'
  module YourApp
    class Context
      include ClassX
      include ClassX::Pluggable

      def run
        call_event("SETUP", self)
        # you app
        call_event("TEARDOWN", self)
      end
    end
  end

in your plugin class

  require 'classx'
  require 'classx/pluggable'
  module YourApp
    class Plugin
      include ClassX
      include ClassX::Pluggable::Plugin

      class SomePlugin < Plugin
        def register
          add_event("SETUP", :on_setup)
        end

        def on_setup c
          # c is YourApp::Context's instance.
          # hooked setup
        end
      end
    end
  end

and, on your start up script.

  app = YourApp::Context.new
  app.load_plugins([
    { :module => YourApp::Plugin::SomePlugin, :config => {} },
  ])

  app.run

== Description

== Installation

=== Archive Installation

	rake install

=== Gem Installation

== Features/Problems

CAVEAT: this project is early development. API may be vary in future.

== Copyright

Author::    Keiji, Yoshimi <walf443 at gmail.com>
Copyright:: Copyright (c) 2008 Keiji, Yoshimi
License:: you can redistribute it and/or modify it under the same terms as Ruby itself.
